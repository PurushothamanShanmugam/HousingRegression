# regression.py

from utils import load_data, preprocess_data
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score


def train_and_evaluate(model, X_train, X_test, y_train, y_test):
    """
    Trains and evaluates a model, returning MSE and R².
    """
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    mse = mean_squared_error(y_test, y_pred)
    r2 = r2_score(y_test, y_pred)
    return mse, r2


def main():
    # Step 1: Load and preprocess data
    df = load_data()
    X_train, X_test, y_train, y_test = preprocess_data(df)

    # Step 2: Initialize models
    models = {
        "Linear Regression": LinearRegression(),
        "Decision Tree": DecisionTreeRegressor(random_state=42),
        "Random Forest": RandomForestRegressor(random_state=42)
    }

    # Step 3: Train, evaluate, and print results
    for name, model in models.items():
        mse, r2 = train_and_evaluate(model, X_train, X_test, y_train, y_test)
        print(f"{name}:\n  MSE = {mse:.4f}, R² = {r2:.4f}\n")


if __name__ == "__main__":
    main()
